name: Build Subspaced Binary

on:
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io

jobs:
  build-linux:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      # Check if Dockerfile.cross or Cross.toml have changed
      - name: Check for Docker changes
        id: check_changes
        run: |
          echo "dockerfile_changed=$(git diff --quiet HEAD^ HEAD daemon/Dockerfile.cross daemon/Cross.toml && echo false || echo true)" >> $GITHUB_OUTPUT
        continue-on-error: true  # In case this is the first commit

      # Build our custom cross Docker image only if files changed or this is the first run
      - name: Set up Docker Buildx
        if: steps.check_changes.outcome == 'failure' || steps.check_changes.outputs.dockerfile_changed == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: steps.check_changes.outcome == 'failure' || steps.check_changes.outputs.dockerfile_changed == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build cross Docker image
        if: steps.check_changes.outcome == 'failure' || steps.check_changes.outputs.dockerfile_changed == 'true'
        uses: docker/build-push-action@v5
        with:
          context: daemon
          file: daemon/Dockerfile.cross
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}-cross:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Install and use cross to build the binary
      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build binary
        working-directory: daemon
        run: cross build --target x86_64-unknown-linux-gnu --release

      # Upload the binary as an artifact
      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: subspaced-linux-x86_64
          path: daemon/target/x86_64-unknown-linux-gnu/release/subspaced

      # If this is a tag, create a GitHub release with the binary
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: daemon/target/x86_64-unknown-linux-gnu/release/subspaced
          generate_release_notes: true