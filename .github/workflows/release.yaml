name: Release

on:
  workflow_dispatch:
    inputs:
        tag:
          description: Release Tag
          required: true
          default: dry-run
          type: string

permissions:
  contents: write
  packages: write
  actions: read


jobs:
  # This will trigger the existing valk-server build but ensure we wait for it
  trigger-server-build:
    uses: ./.github/workflows/build-valk-server.yaml
    secrets: inherit
    with:
      tag: ${{ inputs.tag }}


  # This will run after server build
  trigger-docker-build:
    needs: trigger-server-build
    uses: ./.github/workflows/build-chromium-demo.yaml
    secrets: inherit
    permissions:
      contents: write 
      packages: write  # For pushing to container registry
      actions: read    # For downloading artifacts
    with:
      tag: ${{ inputs.tag }}
      
  python-lint:
    needs: trigger-server-build
    uses: ./.github/workflows/python-lint.yaml
    secrets: inherit

  # This will run after docker build - (python integration tests require updated docker image)
  integration-tests:
    needs: [trigger-server-build, python-lint]
    uses: ./.github/workflows/python-integration-tests.yaml
    secrets: inherit


  # Final publish job that creates the release
  publish:
    needs: [trigger-server-build, trigger-docker-build, integration-tests]
    runs-on: ubuntu-latest
    environment: release
    if: inputs.tag != 'dry-run'
    steps:
        - name: Install the latest version of uv and set the python version
          uses: astral-sh/setup-uv@v5

        - uses: actions/checkout@v4
        - name: Build wheel
          run: |
            uv build --wheel

        - name: Upload wheel artifact
          uses: actions/upload-artifact@v4
          with:
            name: python-dist-${{ inputs.tag }}
            path: dist/*

        - name: Download all artifacts
          uses: actions/download-artifact@v4
          with:
            path: artifacts

        - name: Upload to Release
          uses: softprops/action-gh-release@v1
          with:
            tag_name: ${{ inputs.tag }}
            files: artifacts/**/*

        - name: Publish package distributions to PyPI
          uses: pypa/gh-action-pypi-publish@release/v1

        - name: Create a tag in the Valk repo
          uses: actions/create-tag@v1
          with:
            tag_name: ${{ inputs.tag }}
